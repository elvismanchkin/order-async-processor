spring:
  application:
    name: order-async-processor
  r2dbc:
    host: localhost
    port: 5432
    database: orders_db
    username: postgres
    password: postgres
    pool:
      initial-size: 50
      max-size: 200
      max-idle-time: 30m
      validation-query: SELECT 1
      validation-depth: remote
  data:
    r2dbc:
      repositories:
        enabled: true
  reactor:
    context-propagation: auto
  # JDBC configuration for Liquibase
  datasource:
    url: jdbc:postgresql://${spring.r2dbc.host}:${spring.r2dbc.port}/${spring.r2dbc.database}
    username: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    driver-class-name: org.postgresql.Driver
  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.xml
    default-schema: public
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${spring.r2dbc.host}:${spring.r2dbc.port}/${spring.r2dbc.database}
    password: ${spring.r2dbc.password}
    user: ${spring.r2dbc.username}
    drop-first: true

# Server configuration
server:
  port: 8080
  shutdown: graceful

# Management & Metrics
management:
#  server:
#    port: 8081
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /
      path-mapping:
        metrics: /default-metrics
        prometheus: /metrics
  endpoint:
    prometheus:
      access: unrestricted
    health:
      show-details: always
      probes:
        enabled: true
      access: unrestricted
      group:
        liveness:
          include: livenessState
          additional-path: "server:/livez"
          show-components: always
          show-details: always
        readiness:
          include: readinessState, diskSpace
          additional-path: "server:/readyz"
          show-components: always
          show-details: always
  health:
    defaults:
      enabled: true
    db:
      enabled: true
    diskspace:
      enabled: true
    circuitbreakers:
      enabled: true
  metrics:
    distribution:
      slo:
        http.server.requests: 500ms, 1s
        http.server.requests.active: 500ms, 1s
        http.server.requests.max: 500ms, 1s
        http.server.errors: 500ms, 1s
        http.client.requests: 500ms, 1s
        http.client.requests.active: 500ms, 1s
        webclient.request: 500ms, 1s
        webclient.response: 500ms, 1s
        webclient.error: 500ms, 1s
        webclient.request.time: 500ms, 1s
        order.processing.time: 500ms, 1s
        order.processing.due-interval: 500ms, 1s
        order.processing.interval: 500ms, 1s
      percentiles-histogram:
        http.server.requests: true
        order.processing.time: true
    tags:
      host: ${HOSTNAME:localhost}
      instance: ${HOSTNAME:localhost}
  tracing:
    sampling:
      probability: 1.0
    propagation:
      type: w3c

# Logging
logging:
  level:
    root: INFO
    com.example.orderprocessor: INFO
    io.r2dbc: INFO
    org.springframework.r2dbc: INFO
    org.springframework.data.r2dbc: INFO
    reactor.netty.http.client: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} trace=%X{traceId:-} span=%X{spanId:-} - %msg%n"

# Order Processing Config
order:
  processing:
    enabled: true
    batch-size: 200
    concurrency: 20
    interval: 60000  # 1 minute
    due-interval: 300000  # 5 minutes
    max-age: 24h
    backpressure-timeout: 30s
    types: STANDARD,PRIORITY,URGENT
    status:
      pending: PENDING
      processing: PROCESSING
      completed: COMPLETED
      error: ERROR

# External Services
service:
  external:
    url: http://external-service:8081
    timeout: 30s

# WebClient Config
webclient:
  timeout:
    connect: 5000
    read: 30000
    write: 30000
  max-connections: 500
  acquire-timeout: 45000

# Scheduler Config
scheduler:
  pool-size: 5

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 30s
        failureRateThreshold: 50
    instances:
      getOrderById:
        baseConfig: default
      findOrdersToProcess:
        baseConfig: default
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 200ms
        retryExceptions:
          - java.io.IOException
          - java.lang.RuntimeException
    instances:
      getOrderById:
        baseConfig: default
      saveActionAndUpdateStatus:
        maxAttempts: 5
        waitDuration: 500ms
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true